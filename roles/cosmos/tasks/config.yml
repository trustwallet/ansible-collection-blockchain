---
- name: "Set chain configs"
  ansible.builtin.set_fact:
    chain_config_path: "{{ data_dir }}/config/config.toml"
    chain_config_app_path: "{{ data_dir }}/config/app.toml"

# config.toml

- name: "Update persistent peers" # noqa risky-file-permissions
  community.general.ini_file:
    path: "{{ chain_config_path }}"
    section: "p2p"
    option: "persistent_peers"
    value: "\"{{ chain_peers }}\""
  notify: restart_service

- name: "Update indexer" # noqa risky-file-permissions
  community.general.ini_file:
    path: "{{ chain_config_path }}"
    section: "tx_index"
    option: "indexer"
    value: "\"kv\""
  when: chain_pruning != 'everything'
  notify: restart_service

- name: "Update indexer (if pruning is everyting)" # noqa risky-file-permissions
  community.general.ini_file:
    path: "{{ chain_config_path }}"
    section: "tx_index"
    option: "indexer"
    value: "\"null\""
  when: chain_pruning == 'everything'
  notify: restart_service

# app.toml

- name: "Update minimum gas price" # noqa risky-file-permissions
  community.general.ini_file:
    path: "{{ chain_config_app_path }}"
    section: ""
    option: "minimum-gas-prices"
    value: "\"{{ chain_minimum_gas_prices }}\""
  when: chain_minimum_gas_prices is defined
  notify: restart_service

- name: "Update pruning strategy" # noqa risky-file-permissions
  community.general.ini_file:
    path: "{{ chain_config_app_path }}"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  loop:
    - {section: "", option: pruning, value: "\"{{ chain_pruning }}\""}
    - {section: "", option: pruning-keep-recent, value: "\"{{ chain_pruning_keep_recent }}\""}
    - {section: "", option: pruning-interval, value: "\"{{ chain_pruning_interval }}\""}
  notify: restart_service

- name: "Enable API server" # noqa risky-file-permissions
  community.general.ini_file:
    path: "{{ chain_config_app_path }}"
    section: "api"
    option: "enable"
    value: "{{ chain_api_enable | string | lower }}"
  notify: restart_service

- name: "Include chain tasks only if such exist, otherwise skip the task"
  ansible.builtin.include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "config_{{ chain_name }}.yml"
      skip: true
