---
- name: "Install apt packages"
  ansible.builtin.apt:
    pkg: python3-setuptools
  become: true

- name: "Install pip packages"
  ansible.builtin.pip:
    name: docker-compose
  become: true

- name: "Create host directory"
  ansible.builtin.file:
    path: "{{ data_dir }}/Nano"
    state: directory
    mode: "775"
    owner: "{{ username }}"
  become: true

- name: "Create external volume"
  community.docker.docker_volume:
    name: nano-storage
    driver_options:
      type: none
      o: bind
      device: "{{ data_dir }}"
  become: true

- name: "Generate Nano configs"
  ansible.builtin.template:
    src: "templates/nano-node/{{ item }}"
    dest: "{{ data_dir }}/Nano/{{ item | replace('.j2', '') }}"
    mode: "775"
    owner: "{{ username }}"
  loop:
    - config-node.toml.j2
    - config-rpc.toml.j2
  become: true

- name: "Check docker-compose.yml exists"
  ansible.builtin.stat:
    path: "{{ home_dir }}/docker-compose.yml"
  register: docker_compose_check

- name: "Stop service with Docker Compose"
  community.docker.docker_compose:
    project_src: "{{ home_dir }}"
    stopped: true
    timeout: 30
  become: true
  when: docker_compose_check.stat.exists
  ignore_errors: true

- name: "Generate docker-compose.yml"
  ansible.builtin.template:
    src: templates/docker-compose.yml.j2
    dest: "{{ home_dir }}/docker-compose.yml"
    mode: "775"
  become: true
  become_user: "{{ username }}"

- name: "Start services with Docker Compose"
  community.docker.docker_compose:
    project_src: "{{ home_dir }}"
    pull: true
    restarted: true
  become: true
